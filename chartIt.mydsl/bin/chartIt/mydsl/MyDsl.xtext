// automatically generated by Xtext
grammar chartIt.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/chartIt" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Program returns Program:
	'Program'
	name=EString
	'{'
		'id' '=' id=EString ';'
		functions+=Function  ( functions+=Function )*
	'}';

Function returns Function:
	CsvLoader | DataFiltering | GraphDrawing;


EString returns ecore::EString:
	STRING | ID;
	
EInt returns ecore::EInt:
	'-'? INT;
	
EBoolean returns ecore::EBoolean:
	'true' | 'false';

CsvLoader returns CsvLoader:
		"uses :"  path=EString ";"  ;

DataFiltering returns DataFiltering:
		'filter :'
		column_filter+=Column (',' column_filter+=Column)*  ';'
		('condition :')?
		(rowfilter_condition=RowFilter)? ;	 
	 
GraphDrawing returns GraphDrawing:
	'draw a plot :'
		'graph_type' '=' graph_type=EString ';' &
		'abs_column' '=' abs_column=EString ';' &
		('ord_column' '=' ord_column+=EString ( "," ord_column+=EString)* ';' &
		'labels' '=' label+=EString ( "," label+=EString)* ';' &
		'fill' '=' fill+=EBoolean ( "," fill+=EBoolean)* ';')
		('title' '=' (title+=EString)* ';')? ;
	 
	 
Column returns Column:
	'column'
	index=EInt  
	'as'
	new_name_column=EString  ;


RowFilter returns RowFilter:
	column_name=EString
	operator=Operator
	(string_value=EString)? 
	(int_value=EInt)? ';' ;
	
enum Operator returns Operator:
				greater_than = '>' | smaller_than = '<' | equal = '==' | greater_than_or_equal = '>=' | smaller_than_or_equal = '<='| not_equal = '!=';
